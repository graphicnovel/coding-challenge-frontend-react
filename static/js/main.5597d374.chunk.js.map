{"version":3,"sources":["ResultContext.js","component/SearchForm.js","component/ResultList.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","list","loading","data","error","totalPage","desc","date1","date2","item","title","description","image_url_thumb","loadinigState","success","resultReducer","state","action","type","Error","ResultStateContext","createContext","ResultDispatchContext","ResultProvider","children","useReducer","dispatch","Provider","value","useResultState","useContext","useResultDispatch","getList","page","a","console","log","url","lengthUrl","axios","get","response","lengthCheck","Math","ceil","incidents","length","Header","styled","div","ResetFilterButton","SearchForm","props","useState","from","to","keyword","setKeyword","onChangeInput","e","target","name","placeholder","onChange","onClick","preventDefault","round","Date","getTime","PageButtonContainer","PageButton","PrevNextButton","button","ItemContainer","ItemImg","img","ItemDesc","ItemH2","h2","ResultList","setPage","setId","pageArr","useEffect","i","push","map","id","style","cursor","src","media","address","num","TitleContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5597d374.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n//기본 상태\r\nconst initialState = {\r\n    list: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n        totalPage: null,\r\n        desc: null,\r\n        date1: null,\r\n        date2: null\r\n    },\r\n    item: {\r\n        loading: false,\r\n        data: null,\r\n        error: null,\r\n        title: null,\r\n        description: null,\r\n        image_url_thumb: null\r\n    }\r\n};\r\n\r\n//로딩상태\r\nconst loadinigState = {\r\n    loading: true,\r\n    data: null,\r\n    error: null,\r\n    totalPage: null,\r\n    desc: null,\r\n    date1: null,\r\n    date2: null\r\n};\r\n\r\n//성공했을 때 상태 만들어주는 함수\r\nconst success = (data, totalPage, desc, date1, date2) => ({\r\n    loading: false,\r\n    data,\r\n    error: null,\r\n    totalPage,\r\n    desc,\r\n    date1,\r\n    date2\r\n});\r\n\r\nconst error = error => ({\r\n    loading: false,\r\n    data: null,\r\n    error: error\r\n});\r\n\r\nfunction resultReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'GET_LIST':\r\n            return {\r\n                ...state,\r\n                list: loadinigState\r\n            }\r\n        case 'GET_LIST_SUCCESS':\r\n            return {\r\n                ...state,\r\n                list: success(action.data, action.totalPage, action.desc, action.date1, action.date2),\r\n            }\r\n        case 'GET_LIST_ERROR':\r\n            return {\r\n                ...state,\r\n                list: error(action.error)\r\n            }\r\n        case 'GET_ITEM':\r\n            return {\r\n                ...state,\r\n                item: loadinigState\r\n            }\r\n        case 'GET_ITEM_SUCCESS':\r\n            return {\r\n                ...state,\r\n                item: success(action.data)\r\n            }\r\n        case 'GET_ITEM_ERROR':\r\n            return {\r\n                ...state,\r\n                item: error(action.error)\r\n            }\r\n        default:\r\n            throw new Error(`Unhanded action type: ${action.type}`);\r\n    }\r\n}\r\n\r\n//State용 Context, dispatch용 Context 따로 만들어주기\r\n\r\nconst ResultStateContext = createContext(null);\r\nconst ResultDispatchContext = createContext(null);\r\n\r\nexport function ResultProvider({ children }) {\r\n    const [state, dispatch] = useReducer(resultReducer, initialState);\r\n    return (\r\n        <ResultStateContext.Provider value={state}>\r\n            <ResultDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </ResultDispatchContext.Provider>\r\n        </ResultStateContext.Provider>\r\n    );\r\n}\r\n\r\n//context를 쉽게 조회할 수 있게 해주는 커스텀 Hook\r\nexport function useResultState() {\r\n    const state = useContext(ResultStateContext);\r\n    if (!state) {\r\n        throw new Error('Cannot find UsersProvider');\r\n    }\r\n    return state;\r\n}\r\n\r\nexport function useResultDispatch() {\r\n    const dispatch = useContext(ResultDispatchContext);\r\n    if (!dispatch) {\r\n        throw new Error('Cannot find UsersProvider');\r\n    }\r\n    return dispatch;\r\n}\r\n\r\n//API DATA 받아오는 함수\r\nexport async function getList(dispatch, page, desc, date1, date2) {\r\n    dispatch({ type: 'GET_LIST' });\r\n    try {\r\n        console.log(desc, date1, date2);\r\n\r\n        //기본 url\r\n        let url = `https://bikewise.org:443/api/v2/incidents?page=${page}&per_page=10&proximity=Berlin`;\r\n        let lengthUrl = `https://bikewise.org:443/api/v2/incidents?&per_page=100&proximity=Berlin`;\r\n\r\n        //desc, date1, date2 유무 판단\r\n\r\n        if (desc && date1 && date2) {\r\n            url += `&query=${desc}&occurred_after=${date1}&occurred_before=${date2}`;\r\n            lengthUrl += `&query=${desc}&occurred_after=${date1}&occurred_before=${date2}`;\r\n            console.log(url);\r\n        } else if (desc && date1) {\r\n            url += `&query=${desc}&occurred_after=${date1}`;\r\n            lengthUrl += `&query=${desc}&occurred_after=${date1}`;\r\n            console.log(url);\r\n        } else if (desc && date2) {\r\n            url += `&query=${desc}&occurred_before=${date2}`;\r\n            lengthUrl += `&query=${desc}&occurred_before=${date2}`;\r\n            console.log(url);\r\n        } else if (date1 && date2) {\r\n            url += `&occurred_after=${date1}&occurred_before=${date2}`;\r\n            lengthUrl += `&occurred_after=${date1}&occurred_before=${date2}`;\r\n            console.log(url);\r\n        } else if (desc) {\r\n            url += `&query=${desc}`;\r\n            lengthUrl += `&query=${desc}`;\r\n            console.log(url);\r\n        } else if (date1) {\r\n            url += `&occurred_after=${date1}`;\r\n            lengthUrl += `&occurred_after=${date1}`;\r\n            console.log(url);\r\n        } else if (date2) {\r\n            url += `&occurred_before=${date2}`;\r\n            lengthUrl += `&occurred_before=${date2}`;\r\n            console.log(url);\r\n        }\r\n\r\n        const response = await axios.get(url);\r\n        const lengthCheck = await axios.get(lengthUrl);\r\n        const totalPage = Math.ceil(lengthCheck.data.incidents.length / 10);\r\n\r\n        dispatch({ type: 'GET_LIST_SUCCESS', data: response.data.incidents, totalPage, desc: desc, date1: date1, date2: date2 });\r\n    } catch (e) {\r\n        dispatch({ type: 'GET_LIST_ERROR', error: e });\r\n    }\r\n}\r\n\r\nexport async function getTitleDate(dispatch, page, query) {\r\n    dispatch({ type: 'GET_LIST' });\r\n    try {\r\n        if (query) {\r\n            const response = await axios.get(`https://bikewise.org:443/api/v2/incidents?page=${page}&per_page=10&proximity=Berlin&query=${query}`);\r\n            const lengthCheck = await axios.get(`https://bikewise.org:443/api/v2/incidents?&per_page=100&proximity=Berlin&query=${query}`);\r\n            const totalPage = Math.ceil(lengthCheck.data.incidents.length / 10);\r\n            dispatch({ type: 'GET_LIST_SUCCESS', data: response.data.incidents, totalPage });\r\n        }\r\n    } catch (e) {\r\n        dispatch({ type: 'GET_LIST_ERROR', error: e });\r\n    }\r\n}\r\n\r\n//ID값에 맞는 사건 가져오는 함수\r\nexport async function getItem(dispatch, id) {\r\n    dispatch({ type: 'GET_ITEM' });\r\n    try {\r\n        const response = await axios.get(`/api/v2/incidents/${id}`);\r\n        dispatch({ type: 'GET_ITEM_SUCCESS', data: response.data.incidents });\r\n    } catch (e) {\r\n        dispatch({ type: 'GET_ITEM_ERROR', error: e });\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useResultState, useResultDispatch, getList } from '../ResultContext';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    padding-left: 55px;\r\n    width:80%;\r\n    border-bottom: 1px solid #adb5bd;  \r\n`;\r\n\r\nconst ResetFilterButton = styled.div`\r\n    display: inline-block;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\n\r\nfunction SearchForm(props) {\r\n    const [page, setPage] = useState(1);\r\n\r\n    const [keyword, setKeyword] = useState({\r\n        desc: '',\r\n        from: '',\r\n        to: ''\r\n    });\r\n\r\n    const { desc, from, to } = keyword; //keyword 비구조화 할당\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setKeyword({\r\n            ...keyword,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const ResetFilter = () => {\r\n        setKeyword({\r\n            desc: '',\r\n            from: '',\r\n            to: ''\r\n        })\r\n    }\r\n\r\n    const state = useResultState();\r\n    const dispatch = useResultDispatch();\r\n\r\n    const fetchData = e => {\r\n        e.preventDefault();\r\n        let date1, date2;\r\n        from ? date1 = Math.round(new Date(from).getTime() / 1000.0) : date1 = '';\r\n        to ? date2 = Math.round(new Date(to).getTime() / 1000.0) : date2 = '';\r\n        console.log(desc, from, to);\r\n        getList(dispatch, page, desc, date1, date2);\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <input type='text' name='desc' placeholder='Search case title' value={desc} onChange={onChangeInput} />\r\n            <label>From<input type=\"date\" name=\"from\" value={from} onChange={onChangeInput} /></label>\r\n            <label>To<input type=\"date\" name=\"to\" value={to} onChange={onChangeInput} /></label>\r\n            <input type=\"submit\" value=\"Find Cases\" onClick={fetchData} />\r\n            <ResetFilterButton onClick={ResetFilter}>Reset filter</ResetFilterButton>\r\n        </Header>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useResultState, useResultDispatch, getList } from '../ResultContext';\r\n\r\nconst PageButtonContainer = styled.div`\r\n    text-align: center;\r\n`;\r\nconst PageButton = styled.div`\r\n    display:inline-block;\r\n    padding:10px;\r\n    color:#495057;\r\n`;\r\n\r\nconst PrevNextButton = styled.button`\r\n    padding:10px;\r\n    color:#495057;\r\n    background:#38d9a9;\r\n    border:none;\r\n    outline:none;\r\n    cursor:pointer;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    width:80%;\r\n    padding: 15px;\r\n    display:flex;\r\n    align-items: start;\r\n    justify-content: flex-start;\r\n    list-style:none;\r\n`;\r\n\r\nconst ItemImg = styled.img`\r\n    width:200px;\r\n`;\r\n\r\nconst ItemDesc = styled.div`\r\n    padding:0 20px;\r\n`;\r\nconst ItemH2 = styled.h2`\r\n    font-size:20px;\r\n    margin-top:0px;\r\n`;\r\n\r\nfunction ResultList() {\r\n    const [page, setPage] = useState(1);\r\n    const [id, setId] = useState(null);\r\n\r\n    const pageArr = [];\r\n\r\n    const state = useResultState();\r\n    const dispatch = useResultDispatch();\r\n\r\n    const { loading, data: list, error, totalPage, desc, date1, date2 } = state.list;\r\n\r\n\r\n    //리스트 불러오기\r\n    useEffect(() => {\r\n        getList(dispatch, page, desc, date1, date2);\r\n    }, [page]);\r\n\r\n    //페이지 수 불러오기\r\n    for (let i = 0; i < totalPage; i++) {\r\n        pageArr.push(i + 1);\r\n    }\r\n\r\n    //이전, 다음 버튼\r\n    const onPrevPage = () => {\r\n        if (page > 1) {\r\n            let prev = page - 1;\r\n            setPage(prev);\r\n        }\r\n    }\r\n    const onNextPage = () => {\r\n        if (page < pageArr.length) {\r\n            let next = page + 1;\r\n            setPage(next);\r\n        }\r\n    }\r\n\r\n    console.log(list);\r\n\r\n    // 상태에 따라 메세지 출력\r\n    if (loading) return <div>로딩중...</div>;\r\n    if (error) return <div>에러가 발생했습니다</div>;\r\n    if (!list) return <div>결과가 없습니다.</div>;\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {list.map(item => (\r\n                    <ItemContainer key={item.id} onClick={() => setId(item.id)}\r\n                        style={{ cursor: 'pointer' }}>\r\n                        <ItemImg src={item.media.image_url_thumb} />\r\n                        <ItemDesc>\r\n                            <ItemH2>{item.title}</ItemH2>\r\n                            <p>{item.description}</p>\r\n                            <p>{item.address}</p>\r\n                        </ItemDesc>\r\n                    </ItemContainer>\r\n                ))}\r\n            </ul>\r\n            <PageButtonContainer>\r\n                <PrevNextButton onClick={onPrevPage}>&lt;&lt;</PrevNextButton>\r\n                {pageArr ? pageArr.map(num => (\r\n                    <PageButton key={num} onClick={() => setPage(num)} style={{ cursor: 'pointer' }}>{num}</PageButton>\r\n                )) : <span>1</span>}\r\n                <PrevNextButton onClick={onNextPage}>&gt;&gt;</PrevNextButton>\r\n            </PageButtonContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResultList;","import React from 'react';\nimport SearchForm from './component/SearchForm';\nimport ResultList from './component/ResultList';\nimport { ResultProvider } from './ResultContext';\nimport styled from 'styled-components';\n\n\nconst TitleContainer = styled.div`\n  padding-left:55px;\n`;\nfunction App() {\n\n  return (\n    <ResultProvider>\n      <TitleContainer>\n        <h1>Police Department of Berlin</h1>\n        <p>Stolen Bikes</p>\n      </TitleContainer>\n      <SearchForm />\n      <ResultList />\n    </ResultProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}